@import 'grid_mixins.scss';
@import '../../_base/scss/settings.scss';

$grid-max-width: 1080px;

$gutter: 0;

$responsive-gutter-small: $gutter;
$responsive-gutter-medium: $gutter;
$responsive-gutter-large: $gutter;

$responsive-grid-small: 'g-cell';
$responsive-grid-medium: 'g-cell-md';
$responsive-grid-large: 'g-cell-lg';

$responsive-offset-small: 'g-offset';
$responsive-offset-medium: 'g-offset-md';
$responsive-offset-large: 'g-offset-lg';

$responsive-image-small: 'img';
$responsive-image-medium: 'img-md';
$responsive-image-large: 'img-lg';

.styleguide-grid-coloring .g-cell {
    border: 1px solid #0f90ba;
    background: #C8F2FF;
    color: black;
    min-height: 50px;
    text-align: center;
}

.styleguide-grid-coloring .g-vertical-group {

    border: 1px solid #0f90ba;

    &:first-child .g-cell {
        height: 75px;
    }

    .g-cell {
        border: 1px solid #AAE8FC;
    }
}

.styleguide-grid-content {
    width: 100%;
    height: 100%;
    background-color: white;
    line-height: 50px;
}


%g-element {
    box-sizing: border-box;

    display: inline-block;
    overflow: hidden;
    vertical-align: top;
}

.g-group {
    /* font-size whitespace hack. This gets rid of spaces between grid cells */
    font-size: 0;
    letter-spacing: 0;
}

.g-group--full-width {
    max-width: 100%;
    margin-left: 0;
    margin-right: 0;
}

.g-grid {
    @extend .g-group;
    max-width: $grid-max-width;
    margin-left: auto;
    margin-right: auto;
}

.g-vertical-group {
    @extend %g-element;
    @extend .g-group;

    padding: 0;
}

.g-cell {
    @extend %g-element;

    font-size: 15px;
    line-height: 22px;
    font-weight: 400;

    letter-spacing: $letter-spacing;

    &.g-cell--no-gutters {
        padding-left: 0px;
        padding-right: 0px;
    }

    /* remove the overflow: hidden safety net.

    BE CAREFUL WHEN ADDING.

    If your main content is too big, it will break the grid.
    */
    &.g-cell--has-overflow {
        overflow: visible;
    }
}




/* Media queries for responsive design.*/

/* Cascading responsive sizes
 *
 * Design mobile first, styles for small screens will apply to everything
 */

@include responsive-padding($responsive-gutter-small);
@include responsive-grid-aliased($responsive-grid-small);
@include responsive-offset-aliased($responsive-offset-small);
/* there is no size on this name, because we should be building mobile first */

@media only screen and #{ $responsive-medium-up } {
    @include responsive-padding($responsive-gutter-medium);
    @include responsive-grid-aliased($responsive-grid-medium);
    @include responsive-offset-aliased($responsive-offset-medium);
}

@media only screen and #{ $responsive-large-only } {
    @include responsive-padding($responsive-gutter-large);
    @include responsive-grid-aliased($responsive-grid-large);
    @include responsive-offset-aliased($responsive-offset-large);
}

/* Non-cascading responsive styles
 *
 * These should only apply to one responsive size.
 * These are after grid declarations so the display: none rule will override display: inline-block.
 */

@media only screen and #{ $responsive-medium-down } {
    .g-grid.g-grid--page-margin-manual {
        @include page-margin-manual;
    }
}

@media only screen and #{ $responsive-small-only } {
    @include responsive-hide('small');
    @include responsive-show('medium', 'large');

    .g-grid,
    .g-group--page-margin-reset {
        padding-left: $gutter;
        padding-right: $gutter;
    }
}

@media only screen and #{ $responsive-medium-only } {
    @include responsive-hide('medium');
    @include responsive-show('small', 'large');

    .g-grid,
    .g-group--page-margin-reset {
        padding-left: $gutter;
        padding-right: $gutter;
    }
}

@media only screen and #{ $responsive-large-only } {
    @include responsive-hide('large');
    @include responsive-show('small', 'medium');
}
